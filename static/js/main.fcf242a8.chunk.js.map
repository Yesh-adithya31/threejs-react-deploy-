{"version":3,"sources":["logo.svg","components/Orbit.jsx","components/Background.jsx","components/Floor.jsx","state.js","components/ColorPicker.jsx","components/BoundingBox.jsx","components/Dragable.jsx","components/Model.jsx","components/Cars.jsx","components/CameraControls.jsx","components/CameraButtons.jsx","components/Bulb.jsx","components/Lights.jsx","components/Effects.jsx","App.js","reportWebVitals.js","index.js"],"names":["extend","OrbitControls","Orbit","useThree","camera","gl","attach","args","domElement","Background","props","texture","useLoader","THREE","process","formatted","useMemo","image","height","fromEquirectangularTexture","object","Floor","useBox","ref","receiveShadow","transparent","opacity","state","activeMesh","activeMeshName","cameraPos","target","shouldUpdate","ColorPicker","handleClick","e","material","color","style","background","position","zIndex","left","right","margin","width","display","top","onClick","BoundingBox","offset","dims","visible","children","mass","api","scale","wireframe","DragControls","Dragable","groupRef","useRef","controlsRef","scene","useState","setChildren","useEffect","current","addEventListener","orbitControls","enabled","set","copy","velocity","transformGroup","Model","mixer","model","GLTFLoader","path","animations","length","forEach","clip","clipAction","play","useFrame","delta","update","traverse","child","isMesh","castShadow","side","Cars","fallback","Array","fill","CameraControls","name","getObjectByName","lerp","clone","sub","bottom","textAlign","borderRadius","fontSize","fontWeight","border","cursor","CameraButtons","sets","num","Bulb","lights","push","emissive","Lights","intensity","intensitym","Effects","setLights","focusDistance","focalLength","bokehScale","App","powerPreference","antialias","stencil","depth","shadowMap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcf242a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { useThree, extend } from 'react-three-fiber'\n\nextend({OrbitControls})\n\nconst Orbit = () => {\n    const { camera, gl } = useThree()\n    return <orbitControls \n                attach = 'orbitControls'\n                args={[camera, gl.domElement]} />\n  }\n\nexport default Orbit\n","import { useLoader, useThree } from \"react-three-fiber\";\nimport * as THREE from 'three'\nimport { useMemo } from \"react\";\n\nconst Background = props => {\n    const texture =  useLoader(\n      THREE.TextureLoader, \n      process.env.PUBLIC_URL + '/autoshop.jpg'\n      )\n  \n      const { gl } = useThree()\n\n      const formatted = useMemo(()=>\n                 new THREE.WebGLCubeRenderTarget(\n                texture.image.height\n                ).fromEquirectangularTexture(gl, texture)\n      ,[])\n\n  \n    return(\n      <primitive \n      attach = 'background' \n      object={formatted} />\n    )\n  }\n\nexport default Background","import { useBox } from \"use-cannon\"\n\nconst Floor = props => {\n    const [ref, api] = useBox(()=>({args:[20,1,10],...props}))\n    return (\n      <mesh \n        ref={ ref }\n        {...props} receiveShadow>\n        <boxBufferGeometry args={[200,1,100]} />\n        <meshPhysicalMaterial transparent opacity={0.2}/>\n      </mesh>\n    )\n  }\nexport default Floor","import * as THREE from 'three'\n\n// model3 = \"Capot001_CAR_PAINT_0\"\n//  model s = \"object005_bod_0\"\n\nconst state = {\n    activeMesh : {},\n    activeMeshName : \"Capot001_CAR_PAINT_0\",\n    cameraPos : new THREE.Vector3(9,2,4),\n    target : new THREE.Vector3(4,0,0),\n    shouldUpdate: true\n}\n\nexport default state","import * as THREE from 'three'\nimport state from '../state'\n\nconst ColorPicker = props =>{\n    const handleClick = e =>{\n      if(!state.activeMesh) return\n      state.activeMesh.material.color = new THREE.Color(e.target.style.background)\n    }\n  \n    return(\n      <div style={{ \n            position: 'absolute', \n            zIndex: 1 ,\n            left: 0,\n            right: 0,\n            margin: 'auto',\n            width: 'fit-content',\n            display: 'flex',\n            top: '20px'\n            }}>\n      <div \n      onClick = {handleClick}\n      style={{\n        background: 'blue',\n        height: 50,\n        width: 50\n      }}></div>\n      <div \n      onClick = {handleClick}\n      style={{\n        background: 'yellow',\n        height: 50,\n        width: 50\n      }}></div>\n      <div \n      onClick = {handleClick}\n      style={{\n        background: 'white',\n        height: 50,\n        width: 50\n      }}></div>\n      </div>\n    )\n  \n  }\nexport default ColorPicker","import { useBox } from \"use-cannon\";\n\nconst BoundingBox = ({\n    position = [0,0,0],\n    offset = [0,0,0],\n    dims = [1,1,1],\n    visible = false,\n    children\n}) => {\n    const [ref, api] = useBox(()=> ({ mass: 1, args: dims, position: position }))\n    return(\n        <group ref={ref} api={api}> \n            <mesh scale={dims} visible={visible}>\n            <boxBufferGeometry/>\n            <meshPhysicalMaterial wireframe/>\n            </mesh>\n            <group position={offset}>\n                {children}\n            </group>\n        </group>\n    )\n}\n\nexport default BoundingBox","import { DragControls } from 'three/examples/jsm/controls/DragControls'\nimport { extend, useThree } from 'react-three-fiber'\nimport { useRef, useEffect, useState } from 'react'\n\nextend({ DragControls })\n\nconst Dragable = (props) => {\n  const groupRef = useRef()\n  const controlsRef = useRef()\n  const { camera, gl, scene } = useThree()\n  const [children, setChildren] = useState([])\n\n  useEffect(() => {\n    setChildren(groupRef.current.children)\n  }, [])\n\n  useEffect(() => {\n    controlsRef.current.addEventListener('hoveron',\n    e => scene.orbitControls.enabled = false\n    )\n    controlsRef.current.addEventListener('hoveroff',\n    e => scene.orbitControls.enabled = true\n    )\n    controlsRef.current.addEventListener('dragstart',\n    e => {\n        e.object.api?.mass.set(0)\n        // console.log(e.object.uuid)\n        }\n    )\n    controlsRef.current.addEventListener('dragend',\n    e => e.object.api?.mass.set(1)\n    )\n    controlsRef.current.addEventListener('drag',\n    e => {\n        e.object.api?.position.copy(e.object.position)\n        e.object.api?.velocity.set(0,0,0)\n    }\n    )\n  }, [children])\n  return (\n    <group ref={groupRef}>\n      <dragControls \n      transformGroup = {props.transformGroup}\n      ref={controlsRef}\n      args={[children,camera, gl.domElement]} />\n      {props.children}\n    </group>\n  )\n}\n\nexport default Dragable\n","import { useFrame, useLoader } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport * as THREE from 'three'\n\nconst Model = props =>{\n    const model = useLoader(\n        GLTFLoader,\n        process.env.PUBLIC_URL + props.path\n    )\n\n    // console.log(props.path, model)\n    let mixer\n    if( model.animations.length >0){\n        mixer = new THREE.AnimationMixer(model.scene)\n        model.animations.forEach(clip=>{\n            const action = mixer.clipAction(clip)\n            action.play()\n        })\n    }\n\n    useFrame((scene, delta)=>{\n        mixer?.update(delta)\n    })\n\n    model.scene.traverse(child =>{\n        if(child.isMesh){\n            child.castShadow = true\n            child.receiveShadow = true\n            child.material.side = THREE.FrontSide\n        }\n    })\n    return(\n        <primitive \n        object={model.scene} \n        scale={props.scale}/>\n    )\n}\n\nexport default Model","import { Suspense } from \"react\"\nimport BoundingBox from \"./BoundingBox\"\nimport Dragable from \"./Dragable\"\nimport Model from \"./Model\"\n\nconst Cars = ({})=>{\n    return(\n        <Suspense fallback={null} >\n        <Dragable transformGroup>\n          <BoundingBox \n              // visible \n              position={[4,2,0]}\n              dims ={[3,2,6]}\n              offset={[0,-0.4,0.8]}\n          >\n             <Model \n                path='/tesla_model_3/scene.gltf' \n                scale ={new Array(3).fill(0.01)}\n              />\n          </BoundingBox>\n      </Dragable>\n      <Dragable transformGroup>\n        <BoundingBox \n          // visible \n          position={[-4,2,0]}\n          dims ={[3,2,7]}\n          offset={[0,-0.8,0.2]}\n          >\n            <Model \n            path='/tesla_model_s/scene.gltf' \n            scale ={new Array(3).fill(0.012)}\n            />\n        </BoundingBox> \n      </Dragable>\n      <group \n        // rotation = {[0, Math.PI,0]}\n      >\n      <Model \n          path='/biped_robot/scene.gltf' \n          scale ={new Array(3).fill(0.02)}\n        />\n      </group>\n      </Suspense>\n    )\n}\n\nexport default Cars","import { useFrame } from 'react-three-fiber'\nimport state from '../state'\n\nconst CameraControls = ({}) =>{\n \n    useFrame(({camera, scene}) =>{\n\n        if(state.activeMesh.name !== state.activeMeshName) {\n            state.activeMesh = scene.getObjectByName(\n                state.activeMeshName\n            ) || {}\n        }\n\n        if(state.shouldUpdate){\n            camera.position.lerp(state.cameraPos,0.1)\n            scene.orbitControls.target.lerp(state.target, 0.1)\n            scene.orbitControls.update()\n            const diff = \n                camera.position.clone()\n                .sub(state.cameraPos).length()\n            if ( diff < 0.1) state.shouldUpdate = false\n        }\n        \n    })\n    return(\n        null\n    )\n}\n\nexport default CameraControls","import state from \"../state\"\n\nconst style = {\n    zIndex: 1,\n    position: 'absolute',\n    bottom: '30vh',\n    height: '30px',\n    width: '30px',\n    background: 'white',\n    textAlign: 'center',\n    borderRadius: '100%',\n    fontSize: 20,\n    fontWeight: 'bold',\n    opacity: 0.7,\n    border: '1px solid black',\n    cursor: 'pointer'\n}\nconst CameraButtons = ({}) =>{\n    const sets = {\n        //model 3\n        1: {\n            cameraPos: [9,2,4],\n            target: [4,0,0],\n            name: 'Capot001_CAR_PAINT_0'\n        }, \n        // model s\n        2: {\n            cameraPos: [1,2,5],\n            target: [-4,0,0],\n            name: 'object005_bod_0'\n        }\n    }\n    const handleClick = num => {\n        state.cameraPos.set(...sets[num].cameraPos)\n        state.target.set(...sets[num].target)\n        state.activeMeshName = sets[num].name\n        state.shouldUpdate = true\n    }\n\n    return(\n        <>\n        <button \n            onClick = {e => handleClick(2)}\n            style={{\n            left: '40vw',\n            ...style\n        }}>\n            {'<'}\n        </button>\n\n        <button \n            onClick = {e => handleClick(1)}\n            style={{\n            right: '40vw',\n            ...style\n        }}>\n            {'>'}\n        </button>\n        </>\n    )\n}\n\nexport default CameraButtons","import { useEffect, useRef } from 'react'\nimport { useThree } from 'react-three-fiber'\n\nconst Bulb = (props) => {\n  const ref = useRef()\n  const { scene } = useThree()\n  useEffect(()=>{\n    if(scene.lights) scene.lights.push(ref)\n    else scene.lights = [ref]\n  },[])\n\n  return (\n    <mesh \n        {...props}\n        ref = {ref}\n      >\n      <pointLight\n        castShadow\n        shadow-mapSize-height={2 ** 10}\n        shadow-mapSize-width={2 ** 10}\n        shadow-radius={10}\n      />\n      <sphereBufferGeometry args={[0.2, 20, 20]} />\n      <meshPhongMaterial emissive='white' />\n    </mesh>\n  )\n}\n\nexport default Bulb\n","import Bulb from \"./Bulb\"\n\n\nconst Lights = () => {\n    return (\n        <>\n        <ambientLight intensity={0.2}/>\n        <directionalLight \n          shadow-mapSize-height = {2**10}\n          shadow-mapSize-width = {2**10}\n          shadow-radius = {10}\n          position={[6,3,0]}\n          intensitym={2}\n          castShadow\n          />\n        <Bulb position={[0, 3, 0]}/>\n        <Bulb position={[6, 3, 0]}/>\n        <Bulb position={[-6, 3, 0]}/>\n        </>\n    )\n}\n\nexport default Lights\n","import { useEffect, useState } from \"react\"\nimport { Bloom, DepthOfField, EffectComposer, GodRays } from \"react-postprocessing\"\nimport { useThree } from \"react-three-fiber\"\n\nconst Effects = () =>{\n\n    const [lights, setLights] = useState(null)\n    const { scene } = useThree()\n    useEffect(()=>{\n        if(scene.lights && scene.lights.length === 3)\n            setLights(scene.lights)\n    },[scene.lights])\n\n    return(\n        lights ? \n        <EffectComposer>\n        <DepthOfField \n            focusDistance ={0}\n            focalLength ={0.02}\n            bokehScale = {2}\n            height = {480}\n        />\n        {/* {lights.map(light =>\n                <GodRays \n                key={light.current.uuid} \n                sun={light.current}/>\n         )} */}\n\n      </EffectComposer>\n      : null\n    )\n}\n\n\nexport default Effects","import logo from './logo.svg'\nimport './App.css'\nimport { Canvas } from 'react-three-fiber'\nimport {  Suspense } from 'react'\nimport { Physics } from 'use-cannon'\n\n\nimport Orbit from './components/Orbit'\nimport Background from './components/Background'\nimport Floor from './components/Floor'\nimport ColorPicker from './components/ColorPicker'\nimport Cars from './components/Cars'\nimport CameraControls from './components/CameraControls'\nimport CameraButtons from './components/CameraButtons'\nimport state from './state'\nimport Lights from './components/Lights'\nimport Effects from './components/Effects'\n\n\n\nfunction App() {\n\n  return (\n    <div style={{ height: '100vh', width: '100vw' }}>\n      <ColorPicker/>\n      <CameraButtons/>\n      <Canvas \n      gl ={{\n        powerPreference : \"high-performance\",\n        antialias : false,\n        stencil : false,\n        depth : false\n      }}\n      shadowMap \n      style={{ background: 'black' }} \n      camera={{ position: [7, 7, 7] }}\n      >\n\n        <Suspense fallback={null} >\n          <Background />\n        </Suspense>\n        {/* <fog attach='fog' args={['white', 1, 10]}/> */}\n        <CameraControls state={state}/>\n        <Lights/>\n        <Orbit />\n        \n        <axesHelper args={[5]} />\n\n      \n        <Physics>\n          <Cars/>\n        {/* <Suspense fallback={null} >\n          <Box position={[4, 1, 0]} />\n        </Suspense> */}\n        <Floor position={[0, -0.5, 0]} />\n        </Physics>\n        <Effects/>\n      </Canvas>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}